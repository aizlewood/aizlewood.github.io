{
  "_args": [
    [
      "grunt-css-metrics@^0.1.2",
      "/sites/shared/aizlewood.github.io"
    ]
  ],
  "_from": "grunt-css-metrics@>=0.1.2 <0.2.0",
  "_id": "grunt-css-metrics@0.1.2",
  "_inCache": true,
  "_location": "/grunt-css-metrics",
  "_npmUser": {
    "email": "patrickhamann@gmail.com",
    "name": "patrickhamann"
  },
  "_npmVersion": "1.2.14",
  "_phantomChildren": {
    "graceful-fs": "1.2.3",
    "minimatch": "0.2.14"
  },
  "_requested": {
    "name": "grunt-css-metrics",
    "raw": "grunt-css-metrics@^0.1.2",
    "rawSpec": "^0.1.2",
    "scope": null,
    "spec": ">=0.1.2 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/grunt-css-metrics/-/grunt-css-metrics-0.1.2.tgz",
  "_shasum": "7c4589400adaa762e9d97782c8d03a67cbccfe7c",
  "_shrinkwrap": null,
  "_spec": "grunt-css-metrics@^0.1.2",
  "_where": "/sites/shared/aizlewood.github.io",
  "author": {
    "name": "Patrick Hamann",
    "url": "http://www.patrickhamann.com/"
  },
  "bugs": {
    "url": "https://github.com/phamann/grunt-css-metrics/issues"
  },
  "dependencies": {
    "css-parse": "~1.4.0",
    "glob": "3.2.1",
    "humanize": "~0.0.7"
  },
  "description": "Grunt task to analyse css files and log simple metrics.",
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-jshint": "~0.4.3"
  },
  "directories": {},
  "dist": {
    "shasum": "7c4589400adaa762e9d97782c8d03a67cbccfe7c",
    "tarball": "https://registry.npmjs.org/grunt-css-metrics/-/grunt-css-metrics-0.1.2.tgz"
  },
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/phamann/grunt-css-metrics",
  "installable": true,
  "keywords": [
    "analysis",
    "css",
    "css-metrics",
    "gruntplugin"
  ],
  "main": "gruntfile.js",
  "maintainers": [
    {
      "name": "patrickhamann",
      "email": "patrickhamann@gmail.com"
    }
  ],
  "name": "grunt-css-metrics",
  "optionalDependencies": {},
  "readme": "grunt-css-metrics\n=================\n\nGrunt task to analyse css files and log simple metrics.\n\n## Getting Started\n\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-css-metrics --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-css-metrics');\n```\n## Options\n\n### quiet\n\nType: `Boolean`\nDefault: `false`\n\nSupress any warnings thrown by other max count options.\n\n### maxFileSize\n\nType: `Number`\nDefault: `∞`\n\nMaximum CSS file size in bytes\n\n### maxSelectors\n\nType: `Number`\nDefault: `∞`\n\nMaximum number of selectors within CSS file. (Note: IE selector limit is 4096)\n\n## Examples\n\n### Configuration Example\n\nBasic example of a Grunt config containing the css-metrics task.\n```js\ngrunt.initConfig({\n    cssmetrics: {\n        dev: {\n            src: [\n                'assets/stylesheets/global.min.css'\n            ]\n        }\n    }\n});\n\ngrunt.loadNpmTasks('grunt-css-metrics');\n\ngrunt.registerTask('default', ['cssmetrics']);\n```\n\n### Multiple Files\n\nRunning css-metrics against multiple CSS files. All the files specified in the `src` array will be analyzed by css-metrics.\n```js\ncssmetrics: {\n  dist: {\n    src: [\n        'assets/stylesheets/global.css',\n        'assets/stylesheets/head.css',\n        'assets/stylesheets/*.min.css'\n    ]\n  }\n}\n```\n\n### Specifying Options\n\nExample of using the [options](https://github.com/phamann/grunt-css-metrics#options).\n\n```js\ncssmetrics: {\n    dev: {\n        src: [\n            'test/*.min.css'\n        ],\n        options: {\n            quiet: false,\n            maxSelectors: 4096,\n            maxFileSize: 10240000\n        }\n    }\n}\n```\n\n### Specifying Files with Glob Pattern\n\nExample of using a glob pattern to target many files that should be analysed by css-metrics. The example below will analyse all the files in the `css` directory that have an extension of `.css`.\n\n```js\ncssmetrics: {\n  dist: {\n    src: ['css/*.css']\n  }\n}\n```\n\n##Todo\n\n* Pipe output to JSON file\n* Write unit tests\n\n## Release History\n\n### 0.1.0 (9th June 2013)\n\n* Initial release\n\n## Credits\n\n* [@visionmedia](https://github.com/visionmedia) for the great [css-parse](https://github.com/visionmedia/css-parse) library.\n* Original work from [@rquinlivan](https://github.com/rquinlivan)'s [css-metrics](https://github.com/rquinlivan/css-metrics)\n* Inspiration from my collegue [@kaelig](https://github.com/kaelig)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/phamann/grunt-css-metrics.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "version": "0.1.2"
}
